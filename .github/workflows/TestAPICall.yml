name: Test API Call

on: 
  workflow_dispatch:

jobs:
  post_api_call:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: post_api_call
      run: |
        apiUrl="https://empkiranv01.service-now.com/api/sn_devops/v1/devops/tool/test?toolId=66434870c3b54e109b11243599013181&testType=Smoke"
        requestBody='{"toolId": "66434870c3b54e109b11243599013181", "buildNumber": '${{ github.run_number }}' , "workflow": "Test API Call", "repository": "kiranlakhani20/TestTypes-Repo", "stageName":"post_api_call","pipelineName":"TestAPICall", "testType": "Smoke", "buildNumber": '${{ github.run_number }}', "buildId": '${{ github.run_id }}' , "attemptNumber" : '${{ github.run_attempt }}', "testSummaries": [{"name": "GitHub Test Summary - smoke","passedTests": 1,"failedTests": 1,"skippedTests": 1,"ignoredTests": 0,"blockedTests": 1,"totalTests": 4,"startTime": "2023-12-14T23:31:31z","endTime": "2023-12-14T23:31:31z","duration": 0.0,"testType": "Smoke", "suites": []}] }'
        auth="ZGV2b3BzLmludGVncmF0aW9uLnVzZXI6VGVzdGluZzEh"
        
        authHeader="Basic $auth"
        response=$(curl -X POST -H "Content-Type: application/json" -H "Authorization: $authHeader" -d "$requestBody" $apiUrl)
        exitCode=$?
        
        if [ $exitCode -eq 0 ]; then
          echo "API call successful!"
          echo "Response: $response"
        else
          echo "API call failed!"
          echo "Response: $response"
          exit 1
        fi

  change:
    needs: post_api_call
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change Automation'
    steps:
      - name: ServiceNow Change
        id: create_change
        uses: ServiceNow/servicenow-devops-change@dev
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change Automation'
          change-request: '{"attributes":{"chg_model":{"name":"DevOps"}, "requested_by":{"name": "DevOps System"},"assignment_group":{"name": "Change management"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "","end_date": ""}}'
          # change-request: '{"attributes":{"chg_model":{"name":"DevOp"}}}'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: Enter the planned start date
          # end_date: Enter the planned end date
          abortOnChangeCreationFailure: false

      - name: Output of ServiceNow DevOps Change Automation
        run: |
          # echo 'Output of ServiceNow DevOps Change Automation is change-request-number = ${{ steps.create_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT
          echo 'Output of ServiceNow DevOps Change Automation is change-request-sys-id = ${{ steps.create_change.outputs.change-request-sys-id }}' >> $GITHUB_OUTPUT
          curl -X POST \
            -H "Authorization: Basic ZGV2b3BzLnN5c3RlbTpUZXN0aW5nMSE=" \
            -H "Content-Type: application/xml" \
            -d '<root><name>john2</name><age>34</age></root>' \
            "https://empkiranv01.service-now.com/api/now/attachment/file?table_name=change_request&table_sys_id=${{ steps.create_change.outputs.change-request-sys-id }}&file_name=test113.xml"
          
          
         

  # getChange:
  #   needs: change
  #   runs-on: ubuntu-latest
  #   name: 'ServiceNow DevOps Get Change'
  #   steps:
  #     - name: ServiceNow DevOps Get Change
  #       uses: ServiceNow/servicenow-devops-get-change@v3.1.0
  #       with:
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # # Devops Integration User Name
  #         # devops-integration-user-name: # optional
  #         # # Devops Integration User Password
  #         # devops-integration-user-password: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # Github Context
  #         context-github: ${{ toJSON(github) }}
  #         # The inputs to identify change at Servicenow and GET it.
  #         change-details: '{"build_number":"${{ github.run_id  }}","pipeline_name":"kiranlakhani20/TestTypes-Repo/Test API Call","stage_name":"ServiceNow DevOps Change Automation"}'
          
  #     - name: Output of ServiceNow DevOps Get Change
  #       run: |
  #         echo 'Output of ServiceNow DevOps Change Automation is change-request-sys-id = ${{ steps.create_change.outputs.change-request-sys-id }}'
          
  
